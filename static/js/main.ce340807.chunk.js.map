{"version":3,"sources":["Recipe.js","App.js","reportWebVitals.js","index.js","recipe.module.css"],"names":["Recipe","title","calories","image","ingredients","className","style","recipe","ing","map","ingredient","text","src","alt","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipes","a","fetch","response","json","data","hits","console","log","id","onSubmit","e","preventDefault","type","value","onChange","target","placeholder","label","totalWeight","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"yPAmBeA,EAhBF,SAAC,GAAsC,IAArCC,EAAoC,EAApCA,MAAMC,EAA8B,EAA9BA,SAASC,EAAqB,EAArBA,MAAMC,EAAe,EAAfA,YAChC,OACI,sBAAKC,UAAWC,IAAMC,OAAtB,UACI,6BAAKN,IACL,oBAAII,UAAWC,IAAME,IAArB,SACKJ,EAAYK,KAAI,SAAAC,GAAU,OACvB,6BAAKA,EAAWC,YAGxB,oBAAGN,UAAWC,IAAMJ,SAApB,uBAA0CA,KAC1C,qBAAKG,UAAWC,IAAMH,MAAOS,IAAKT,EAAOU,IAAI,SCuC1CC,G,MAhDL,WAEV,IAGA,EAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAAwBJ,mBAAS,IAAjC,mBAAOK,EAAP,KAAcC,EAAd,KAEAC,qBAAU,WACRC,MACA,CAACH,IAEH,IAAMG,EAAU,uCAAC,8BAAAC,EAAA,sEACMC,MAAM,mCAAD,OAAoCL,EAApC,mBAZf,WAYe,oBAXd,qCAUG,cACTM,EADS,gBAEEA,EAASC,OAFX,OAETC,EAFS,OAGfX,EAAWW,EAAKC,MAChBC,QAAQC,IAAIH,EAAKC,MAJF,2CAAD,qDAgBd,OACE,sBAAKxB,UAAU,iBAAf,UACE,oBAAI2B,GAAG,cAAP,4BACA,uBAAMC,SARI,SAAAC,GACdA,EAAEC,iBACFd,EAASH,GACTC,EAAU,KAKqBd,UAAU,cAArC,UAEE,uBAAOA,UAAU,aAAc+B,KAAK,OAAOC,MAAOnB,EAAQoB,SAd/C,SAAAJ,GACjBf,EAAUe,EAAEK,OAAOF,QAaqEG,YAAY,yBAC9F,wBAASnC,UAAU,gBAAgB+B,KAAK,SAAxC,uBAEF,qBAAK/B,UAAU,UAAf,SACCW,EAAQP,KAAI,SAAAF,GAAM,OACjB,cAAC,EAAD,CAAwCN,MAAOM,EAAOA,OAAOkC,MAAOvC,SAAUK,EAAOA,OAAOL,SAAUC,MAAOI,EAAOA,OAAOJ,MAAOC,YAAaG,EAAOA,OAAOH,aAAhJG,EAAOA,OAAOmC,kBAI7B,wBAAQrC,UAAU,SAAlB,0DCnCSsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,sBAAsB,SAAW,4B","file":"static/js/main.ce340807.chunk.js","sourcesContent":["import React from \"react\";\r\nimport style from './recipe.module.css'\r\n\r\nconst Recipe=({title,calories,image,ingredients})=>{\r\n    return(\r\n        <div className={style.recipe}>\r\n            <h1>{title}</h1>\r\n            <ol className={style.ing} >\r\n                {ingredients.map(ingredient=>(\r\n                    <li>{ingredient.text}</li>\r\n                ))}\r\n            </ol>\r\n            <p className={style.calories} >Calories: {calories}</p>\r\n            <img className={style.image} src={image} alt=\"\" />\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Recipe;","import React,{useEffect,useState} from \"react\";\nimport Recipe from './Recipe';\nimport './App.css';\n\nconst App=()=>{\n\nconst APP_ID='c52deb35';\nconst APP_KEY='ea3ed8e5489c7dd24af79fe1eb203790';\n\nconst [recipes, setRecipes]=useState([]);\nconst [search, setSearch]=useState('');\nconst [query, setQuery]=useState('');\n\nuseEffect(()=>{\n  getRecipes();\n},[query])\n\nconst getRecipes=async()=>{\n  const response=await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`)\n  const data=await response.json();\n  setRecipes(data.hits);\n  console.log(data.hits);\n};\n\nconst updateSearch=e=>{\n  setSearch(e.target.value);\n  \n};\nconst getSearch=e=>{\n  e.preventDefault();\n  setQuery(search);\n  setSearch('');\n};\n  return(\n    <div className=\"main-container\">\n      <h1 id=\"main-header\">Ingredient App</h1>\n      <form onSubmit={getSearch} className=\"search-form\">\n      \n        <input className=\"search-bar\"  type=\"text\" value={search} onChange={updateSearch} placeholder=\"Try searching paneer\"/>\n        <button  className=\"search-button\" type=\"submit\"  >Search</button>\n      </form>\n      <div className=\"recipes\">\n      {recipes.map(recipe=>(\n        <Recipe key={recipe.recipe.totalWeight} title={recipe.recipe.label} calories={recipe.recipe.calories} image={recipe.recipe.image} ingredients={recipe.recipe.ingredients}/>\n      ))}\n      </div>\n      \n      <footer className=\"footer\">Made with ðŸ’“ by princepratikk</footer>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__16YV-\",\"image\":\"recipe_image__3G5cv\",\"calories\":\"recipe_calories__2qoAL\"};"],"sourceRoot":""}